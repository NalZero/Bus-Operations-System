generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Quota_Policy {
  QuotaPolicyID String @id
  StartDate     DateTime
  EndDate       DateTime

  Fixed Fixed?
  Percentage Percentage?
  RegularBusAssignments RegularBusAssignment[]
}

model Fixed {
  FQuotaPolicyID String @id
  Quota Float 

  quotaPolicy Quota_Policy @relation(fields: [FQuotaPolicyID], references: [QuotaPolicyID], onDelete: Cascade)  
}

model Percentage {
  PQuotaPolicyID String @id
  Percentage     Float
  quotaPolicy    Quota_Policy @relation(fields: [PQuotaPolicyID], references: [QuotaPolicyID], onDelete: Cascade)
}

model Stop {
  StopID     String @id
  StopName   String
  Location   String        // You could split this into latitude & longitude if needed

  routesAsStart  Route[]   @relation("StartStop")
  routesAsEnd    Route[]   @relation("EndStop")
  RouteStops     RouteStop[]
}

model Route {
  RouteID       String @id
  StartStopID   String 
  EndStopID     String 
  RouteName     String

  StartStop     Stop               @relation("StartStop", fields: [StartStopID], references: [StopID])
  EndStop       Stop               @relation("EndStop", fields: [EndStopID], references: [StopID])
  RouteStops    RouteStop[]
  BusAssignments BusAssignment[]
}

model RouteStop {
  RouteStopID String @id
  RouteID     String 
  StopID      String
  StopOrder   Int
  Route       Route @relation(fields: [RouteID], references: [RouteID])
  Stop        Stop  @relation(fields: [StopID], references: [StopID])

  @@unique([RouteID, StopID])
}

model BusAssignment {
  BusAssignmentID String @id
  BusID           String
  RouteID         String 
  AssignmentDate  DateTime
  Battery         Boolean
  Lights          Boolean
  Oil             Boolean
  Water           Boolean
  Break           Boolean
  Air             Boolean
  Gas             Boolean
  Engine          Boolean
  TireCondition   Boolean
  Self            Boolean

  Route                Route                 @relation(fields: [RouteID], references: [RouteID])
  RegularBusAssignment RegularBusAssignment?

  @@index([BusID])
}

model RegularBusAssignment {
  RegularBusAssignmentID String @id
  DriverID               String 
  ConductorID            String 
  QuotaPolicyID          String 
  Change                 Float
  TripRevenue            Float
  quotaPolicy            Quota_Policy         @relation(fields: [QuotaPolicyID], references: [QuotaPolicyID])
  BusAssignment          BusAssignment        @relation(fields: [RegularBusAssignmentID], references: [BusAssignmentID])

  @@index([DriverID])
  @@index([ConductorID])
}
